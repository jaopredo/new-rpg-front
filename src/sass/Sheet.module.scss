@use "sass:math";
@use 'sass:color';
@use 'sass:map';
@use './modules/mixins';
@use './modules/colors' as *;

.charRegister {
    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
    height: 100%;
    width: 100%;
    display: grid;
    grid-template-columns: 60% 40%;
    grid-template-rows: auto 4vh auto 15vh;
    grid-template-areas:
        "basic ."
        "attr ."
        "attr specs"
        "button button";
}

.standRegister {
    @extend .charRegister;
    grid-template-rows: 50vh 8vh auto auto 15vh;
    grid-template-areas:
        "basic ."
        "attr substand"
        "attr substand"
        "abilitys abilitys"
        "button button";
}

.actStandRegister {
    @extend .standRegister;
    grid-template-areas:
        "basic ."
        ". ."
        "acts acts"
        "acts acts"
        "button button";
}

.actsFieldset {
    @include mixins.flex($dir: column, $g: 20px);

    grid-area: acts;
}
.act {
    @include mixins.flex($dir: column);
    p {
        @include mixins.flex($dir: column);
    }
    & > h3 {
        font-size: 2.1em;
        font-weight: bolder;
        color: white;
        background-color: $title-bg;
        width: 100%;
        text-align: center;
    }
}


.beneficts {
    font-size: 0.6em;
}
.warning {
    color: #ff5555;
    font-weight: bolder;
    font-size: .6em;
}

.generalContainer {
    @include mixins.flex();
}

/* MOVIMENTO */
.movimentArea {
    grid-area: movimento;
}

.basicFieldset {
    grid-area: basic;
    // background: blue;
    margin-left: 50px;
    margin-top: 30px;

    ul {
        list-style: none;
        font-size: 1.7em;
        width: fit-content;
        height: 100%;

        @include mixins.flex($ai: flex-start, $dir: column);

        gap: 3.5px;
    }

    select {
        font-size: 1.2vw;
    }
    input {
        font-family: Arial, Helvetica, sans-serif;
        border-bottom: 2px solid $input-color;
        text-align: center;
        
        &:focus {
            outline: none;
        }
    }
}
.basicArea {
    @include mixins.flex($dir: column);
    grid-area: basic;
    font-family: Arial, Helvetica, sans-serif;
}
.infosContainer {
    @include mixins.flex($jc: space-around);
    width: 100%;
}

/* ATTRIBUTES */
.attrFieldset {
    grid-area: attr;
    // background: red;

    @include mixins.flex($dir: column);
    gap: 50px;
    width: 100%;

    p {
        @include mixins.flex;
        gap: 10px;
        font-size: 1.3em;
    }
}
.attributesArea {
    @include mixins.flex($dir: column);
    padding: 65px;
    grid-area: attrs;
}


/* ESPECIALIDADES */
.specsFieldset {
    grid-area: specs;
    // background: violet;

    @include mixins.flex($dir: column);
    gap: 4px;

    h3, h2 {
        background-color: $title-bg;
        color: white;
        padding: 5px;
        text-align: center;
        width: 90%;
        font-size: 1.5em;
    }

    table {
        width: 100%;
        padding: 0px 10px;
        font-size: 1.1em;

        @include mixins.flex($dir: column);
        gap: 8px;

        thead { width: 100%; }

        tbody {
            width: 100%;
        }

        tr {
            @include mixins.flex($jc: space-between);
            width: 100%;
            padding: 2px;

            &:hover {
                cursor: pointer;
            }
        }

        input[type="checkbox"] {
            cursor: pointer;
        }
        label {
            cursor: pointer;
        }
    }
}

/* HABILIDADES */
.abilitysFieldset {
    @include mixins.flex($dir: column);
    gap: 10px;
    width: 100%;

    padding-top: 100px;

    grid-area: abilitys;
}

/* SUBSTAND */
.substandFieldset {
    grid-area: substand;
    padding: 20px;

    ul{ list-style: none; }
    h4 {
        margin: 30px 0;
    }
    legend {
        background-color: $title-bg;
        margin: auto;
        font-weight: bolder;
        color: white;
        padding: 10px;
        font-size: 1.4em;
        width: 100%;
        text-align: center;
    }
}

.subStandAttr {
    font-size: 1.6em;
    border: 2px solid black;
    padding: 5px;
    width: 50px;
    height: 50px;
    text-align: center;
}

.subStandBasic {
    font-size: 1.5em;
    width: 100%;
    input {
        border-bottom: 1px solid $input-color;
    }
    select {
        font-size: 1em;
    }
}

.subStandAttributes {
    label {
        font-size: 1.5em;
        font-weight: bold;
    }
    li {
        @include mixins.flex($jc: space-between);
        width: 100%;
    }
}


/* BOTÃO */
$button-color: rgb(80, 80, 80);
$nhover: -20;
$nactive: -40;
.buttonContainer {
    @include mixins.flex($dir: column);
    grid-area: button;
    // background: yellow;

    button[type="submit"] {
        background-color: $button-color;
        color: white;
        border-radius: 5px;
        font-size: 2em;

        &:hover {
            background-color: color.adjust($button-color,
                $red: $nhover,
                $green: $nhover,
                $blue: $nhover,
            );
        }
        &:active {
            background-color: color.adjust($button-color,
                $red: $nactive,
                $green: $nactive,
                $blue: $nactive,
            );
        }
    }
}

.name {
    border: none;
    outline: none;
    font-size: 2.6em;
    text-align: center;
    margin-bottom: 10px;
}


$container-radius: 320px;
$list-radius: 320px;
$attribute-li-height-width: 100px;

$num-elements: 6;
$angle: math.div(360, $num-elements);
$rot: 0;


// @function calc-distance() {

// }

.pointsInfoContainer p {
    @include mixins.flex(center, center);
    gap: 10px;
}

.attrContainer {
    margin-top: 100px;
    margin-bottom: 100px;
    
    width: $container-radius;
    height: $container-radius;

    background-color: $span-color;
    border-radius: 50%;

    box-shadow:  5px 5px 10px #262626,
             -5px -5px 10px #5a5a5a;

    @include mixins.flex();

    h3 {
        color: white;
        font-size: 2vw;
        position: absolute;
    }

    /* CONFIGURANDO LISTA PARA DISTRIBUIR EM VOLTA DO CÍRCULO */
    ul {
        @include mixins.flex();

        width: $list-radius;
        height: $list-radius;
        position: relative;
    }

    li {
        @include mixins.flex($dir: column);

        // background: blue;
        border-radius: 50%;

        width: $attribute-li-height-width;
        height: $attribute-li-height-width;

        position: absolute;
        // left: 0;
        // transform-origin: math.div($list-radius, 2);
        margin: math.div($attribute-li-height-width, 2);

        &:hover label{
            opacity: 1;
        }
    }

    @for $i from 1 through $num-elements {
        li:nth-child(#{$i}) {
            transform: rotate($rot * 1deg)
                translate(math.div($list-radius, 2) + math.div($attribute-li-height-width, 2))
                rotate($rot * -1deg);
        }
        $rot: $rot + $angle
    }

    label {
        opacity: 0;
        font-size: 1.2em;
        z-index: -1;
        font-weight: bold;
        color: black;
        background: #ffff;
        padding: 10px;
        border-radius: 4px;
        box-shadow: 0px 0px 10px black;
        transition: opacity .6s;

        position: absolute;

        bottom: 0;
        transform: translateY(100%)

    }

    input {
        border: 4px solid black;
        background-color: transparent;

        width: 100%;
        height: 100%;

        text-align: center;
        font-size: 2em;
        border-radius: 50%;
        transition: background-color 500ms;

        &:hover {
            background-color: rgba(61, 61, 61, 0.171);
            cursor: pointer;
        }
    }
}

.spanContainer {
    @include mixins.flex();
    text-align: center;
    border: 3px solid black;
    padding: 10px;
    width: 70px;

    font-weight: bold;
    font-size: 14pt;
}
